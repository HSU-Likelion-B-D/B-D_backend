name: CD

on:
  workflow_run:
    workflows: ["CI with Gradle"] # CI 워크플로 이름과 정확히 일치해야 함
    types: [completed] # CI가 끝났을 때 트리거
    branches: [main] # 특정 브랜치에서만

permissions:
  contents: read

env:
  IMAGE: ${{ secrets.DOCKER_USERNAME }}/bd

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bd

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # SSH로 서버에 접속해 배포
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            echo "${{ secrets.ENV_FILE }}" > /home/${{ secrets.SERVER_USER }}/.env
            echo "SPRING_REDIS_HOST=my-redis" >> /home/${{ secrets.SERVER_USER }}/.env

            docker network create my-app-network || true

            docker stop my-redis || true
            docker rm my-redis || true
            docker run -d --name my-redis --network my-app-network redis:alpine
            
            echo "[1/3] Pull latest Docker image..."
            docker pull ${{ env.IMAGE }}:latest

            echo "[2/3] Restart container with new image..."
            docker stop bd || true
            docker rm bd || true
            docker run -d --name bd \
              --network my-app-network \
              --env-file /home/${{ secrets.SERVER_USER }}/.env \
              -p 8080:8080 \
              ${{ env.IMAGE }}:latest
            
            
            echo "[3/3] Cleanup unused images..."
            docker image prune -f