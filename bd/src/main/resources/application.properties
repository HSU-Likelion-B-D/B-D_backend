spring.application.name=bd
server.servlet.context-path=/bd

# application-secret.properties
spring.config.import=optional:application-secret.properties

# Datasource(MySQL)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# Redis 설정
    # Redis 서버 호스트 주소 (내 컴퓨터에서 실행 중이면 localhost)
spring.data.redis.host=localhost
    # Redis 서버 포트 번호 (기본값 6379)
spring.data.redis.port=6379

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# AWS S3
cloud.aws.s3.bucket=${BUCKET_NAME}
cloud.aws.stack.auto=false
cloud.aws.region.static=ap-northeast-2
cloud.aws.credentials.access-key=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}

# JWT
security.jwt.secret-key=${JWT_SECRET_KEY}
    # 1일
security.jwt.expiration=${JWT_EXPIRATION}

# Email (Gmail)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}

# SMTP 상세 설정 (보안, 시간제한 등)
    # true로 설정 시, SMTP 서버에 로그인이 필요함 (Gmail은 필수)
spring.mail.properties.mail.smtp.auth=true
    # true로 설정 시, TLS 암호화를 사용하여 안전한 연결을 시도함 (비밀 통로 사용)
spring.mail.properties.mail.smtp.starttls.enable=true
    # true로 설정 시, TLS 암호화 연결이 없으면 아예 메일을 보내지 않음 (더 강력한 보안)
spring.mail.properties.mail.smtp.starttls.required=true
    # 서버와 연결을 시도할 때 기다리는 최대 시간 (5초)
spring.mail.properties.mail.smtp.connectiontimeout=5000
    # 서버로부터 응답을 기다리는 최대 시간 (5초)
spring.mail.properties.mail.smtp.timeout=5000
    # 메일 전송 작업이 완료될 때까지 기다리는 최대 시간 (5초)
spring.mail.properties.mail.smtp.writetimeout=5000
    # 사용자 커스텀 설정, 이메일 인증번호의 유효 시간 (5분). @Value("${auth-code-expiration-millis}") 로 읽어서 사용
auth-code-expiration-millis=300000